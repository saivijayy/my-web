name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code from GitHub repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Step 4: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} .
        echo "Image built: ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}"

    # Step 5: Push Docker image to Amazon ECR
    - name: Push Docker image to Amazon ECR
      run: |
        docker tag ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

    # Step 6: Deploy to Amazon ECS
    - name: Deploy to Amazon ECS
      run: |
        aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --force-new-deployment

    # Step 7: Run Integration Tests
    - name: Run integration tests
      run: |
        # Add your integration test commands here
        # For example, you might use curl to test an endpoint
        curl --fail http://your-ecs-service-url/health || exit 1

    # Step 8: Rollback on failure
    - name: Rollback on failure
      if: failure()
      run: |
        echo "Integration tests failed. Rolling back to previous task definition..."
        aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --task-definition ${{ secrets.PREVIOUS_TASK_DEFINITION }}
        echo "Rollback completed."
